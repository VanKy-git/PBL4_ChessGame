package com.chatapp.server.Test;

import com.chatapp.server.Model.Entity.DBConnection;
import com.chatapp.server.Model.Entity.user;
import com.chatapp.server.Controller.userController;
import com.google.gson.Gson;
import com.google.gson.JsonObject;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

public class UserDAOTest {

    public static void main(String[] args) {
        // Ki·ªÉm tra k·∫øt n·ªëi DB
        try (Connection conn = DBConnection.getConnection()) {
            System.out.println("‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng: " + conn.getMetaData().getURL());
        } catch (SQLException e) {
            System.err.println("‚ùå K·∫øt n·ªëi database th·∫•t b·∫°i: " + e.getMessage());
            return;
        }

        // T·∫°o controller
        userController controller = new userController();
        Gson gson = new Gson();

        try {
            // ====== TEST 1: ƒêƒÉng k√Ω ======
            System.out.println("\nüß© Test 1: ƒêƒÉng k√Ω user m·ªõi");
            JsonObject registerRequest = new JsonObject();
            registerRequest.addProperty("username", "nhuantest");
            registerRequest.addProperty("password", "12345");

            String registerResponseJson = controller.handleRequest("register", registerRequest.toString());
            JsonObject registerResponse = gson.fromJson(registerResponseJson, JsonObject.class);

            if (registerResponse.get("success").getAsBoolean()) {
                user newUser = gson.fromJson(registerResponse.get("data"), user.class);
                System.out.println("‚úÖ T·∫°o user th√†nh c√¥ng: " + newUser.getUserName() + " (ID: " + newUser.getUserId() + ")");
            } else {
                System.out.println("‚ùå ƒêƒÉng k√Ω th·∫•t b·∫°i: " + registerResponse.get("error").getAsString());
            }

            // ====== TEST 2: ƒêƒÉng nh·∫≠p ======
            System.out.println("\nüß© Test 2: ƒêƒÉng nh·∫≠p user");
            JsonObject loginRequest = new JsonObject();
            loginRequest.addProperty("username", "nhuantest");
            loginRequest.addProperty("password", "12345");

            String loginResponseJson = controller.handleRequest("login", loginRequest.toString());
            JsonObject loginResponse = gson.fromJson(loginResponseJson, JsonObject.class);

            user loginUser = null;
            if (loginResponse.get("success").getAsBoolean()) {
                loginUser = gson.fromJson(loginResponse.get("data"), user.class);
                System.out.println("‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng: " + loginUser.getUserName());
            } else {
                System.out.println("‚ùå ƒêƒÉng nh·∫≠p th·∫•t b·∫°i: " + loginResponse.get("error").getAsString());
            }

            if (loginUser != null) {
                // ====== TEST 3: C·∫≠p nh·∫≠t tr·∫°ng th√°i ======
                System.out.println("\nüß© Test 3: C·∫≠p nh·∫≠t tr·∫°ng th√°i user");
                JsonObject statusRequest = new JsonObject();
                statusRequest.addProperty("userId", loginUser.getUserId());
                statusRequest.addProperty("status", "Online");

                String statusResponseJson = controller.handleRequest("updateStatus", statusRequest.toString());
                JsonObject statusResponse = gson.fromJson(statusResponseJson, JsonObject.class);
                System.out.println(statusResponse.get("success").getAsBoolean() ?
                        "‚úÖ C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh c√¥ng" :
                        "‚ùå C·∫≠p nh·∫≠t th·∫•t b·∫°i");
            }

            // ====== TEST 4: L·∫•y danh s√°ch ng∆∞·ªùi d√πng ======
            System.out.println("\nüß© Test 4: Danh s√°ch ng∆∞·ªùi ch∆°i");
            String allUsersJson = controller.handleRequest("getAllUsers", "{}");
            JsonObject allUsersResponse = gson.fromJson(allUsersJson, JsonObject.class);

            if (allUsersResponse.get("success").getAsBoolean()) {
                user[] users = gson.fromJson(allUsersResponse.get("data"), user[].class);
                for (user u : users) {
                    System.out.printf("üë§ %-15s | Tr·∫°ng th√°i: %s | Elo: %d\n",
                            u.getUserName(), u.getStatus(), u.getEloRating());
                }
            } else {
                System.out.println("‚ùå L·∫•y danh s√°ch th·∫•t b·∫°i: " + allUsersResponse.get("error").getAsString());
            }

        } catch (Exception e) {
            System.err.println("‚ùå L·ªói trong qu√° tr√¨nh test: " + e.getMessage());
            e.printStackTrace();
        } finally {
            DBConnection.close(); // ƒë√≥ng pool sau khi test
            System.out.println("\nüßπ ƒê√£ ƒë√≥ng pool k·∫øt n·ªëi.");
        }
    }
}
